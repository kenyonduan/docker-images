FROM ruby:2.7.5
LABEL maintainer="kenyonduan@gmail.com"

# refs: https://github.com/GoogleCloudPlatform/ruby-docker/blob/master/ruby-base/Dockerfile-default.in
# Install dependencies for Ruby
# Also installs dependencies for the following common gems:
#
# gems             dependencies
# ------------------------------------------------------------------
# curb             libcurl3, libcurl3-gnutls, libcurl4-openssl-dev
# pg               libpq-dev
# graphicsmagick   libgraphicsmagick1-dev, graphicsmagick-imagemagick-compat, graphicsmagick-libmagick-dev-compat
# nokogiri         libxml2-dev, libxslt-dev
# paperclip        file
# charlock_holmes  libicu-dev
RUN apt-get update \
	&& apt-get install -y --no-install-recommends \
		bzip2 curl git vim apt-utils autoconf \
        build-essential \
        ca-certificates file \
        libcurl4 libcurl4-openssl-dev \
        libffi-dev \
        libgdbm-dev \
        libgmp-dev \
        libicu-dev \
        libgraphicsmagick1-dev graphicsmagick-imagemagick-compat graphicsmagick-libmagick-dev-compat \
        libpq-dev \
        libxml2-dev libxslt-dev \
        zlib1g-dev \
        libncurses5-dev \
        libqdbm-dev \
        libreadline6-dev \
        libssl-dev \
        libyaml-dev \
        libz-dev

# install nodejs
RUN curl --silent --location https://deb.nodesource.com/setup_14.x | bash -
RUN apt-get install -y nodejs
RUN npm i -g yarn

# Clean up apt
RUN apt-get clean && rm -f /var/lib/apt/lists/*_*
# clean up for docker squash
RUN   rm -fr /usr/share/man &&\
      rm -fr /usr/share/doc &&\
      rm -fr /usr/share/vim/vim74/tutor &&\
      rm -fr /usr/share/vim/vim74/doc &&\
      rm -fr /usr/share/vim/vim74/lang &&\
      rm -fr /usr/local/share/doc &&\
      rm -fr /usr/local/share/ruby-build &&\
      rm -fr /root/.gem &&\
      rm -fr /root/.npm &&\
      rm -fr /tmp/* &&\
      rm -fr /usr/share/vim/vim74/spell/en*

# Common environment variables for framework configuration
ENV RACK_ENV=production \
    RAILS_ENV=production \
    APP_ENV=production \
    RAILS_SERVE_STATIC_FILES=true \
    RAILS_LOG_TO_STDOUT=true

# Initialize entrypoint
WORKDIR /app
EXPOSE 3000
ENV PORT=3000
ENTRYPOINT []
CMD [ "irb" ]

